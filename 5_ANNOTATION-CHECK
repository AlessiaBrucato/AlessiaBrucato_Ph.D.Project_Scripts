import os
from PIL import Image, ImageDraw
def visualize_bounding_boxes(patch_dir, output_dir):
    """
    Visualize bounding boxes on patches and save the images with bounding boxes.
    Parameters:
    - patch_dir: Directory containing patches and corresponding YOLO label files.
    - output_dir: Directory to save the visualized images.
    """
    if not os.path.exists(output_dir):
        os.makedirs(output_dir)
    for filename in os.listdir(patch_dir):
        if filename.endswith('.jpg'):
            patch_path = os.path.join(patch_dir, filename)
            label_path = patch_path.replace('.jpg', '.txt')
            with Image.open(patch_path) as img:
                draw = ImageDraw.Draw(img)
                width, height = img.size
                print(f"Processing image: {filename}, Size: {width}x{height}")
                if os.path.exists(label_path):
                    with open(label_path, 'r') as label_file:
                        for line in label_file:
                            data = line.strip().split()
                            if len(data) != 5:
                                print(f"Invalid label line in {label_path}: {line}")
                                continue
                            _, x_center, y_center, box_width, box_height = map(float, data)
                            x_center_pixel = x_center * width
                            y_center_pixel = y_center * height
                            box_width_pixel = box_width * width
                            box_height_pixel = box_height * height
                            x_min = x_center_pixel - box_width_pixel / 2
                            y_min = y_center_pixel - box_height_pixel / 2
                            x_max = x_center_pixel + box_width_pixel / 2
                            y_max = y_center_pixel + box_height_pixel / 2
                            print(f"Drawing box: {x_min}, {y_min}, {x_max}, {y_max} for {filename}")
                            draw.rectangle([x_min, y_min, x_max, y_max], outline="red", width=10)
                output_path = os.path.join(output_dir, filename)
                img.save(output_path)
                print(f"Saved visualized image: {output_path}")

if __name__ == "__main__":
    base_dir = os.path.abspath(os.path.join(os.getcwd(), ".."))  
    patch_dir = os.path.join(base_dir, "2.1_LABELLING")  
    output_dir = os.path.join(base_dir, "2.2_LABELLING-check")
    visualize_bounding_boxes(patch_dir, output_dir)
